<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_lightsaber</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>depth = -1001;
slashing = 0;
slash_radius = 60;
slash_angle = 0;
/*var str;
str = "Use WASD to move. Aim with the mouse. Attack with the left mouse button. Dash by right clicking.";
script_text_follow(str, 0.6, obj_player.x, obj_player.y, obj_eclair_head);
var text = "Dash through the blocks to get to the other side."
script_text(text, 1, 1420, 192);
alarm[0] = 300;*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*str = "Slashing a projectile will reflect it in the direction of your mouse. Jump of walls by clicking W while next to a wall.";
script_text_follow(str, 0.6, obj_player.x, obj_player.y, obj_eclair_head);*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>key_slash = mouse_check_button_pressed(mb_left) &amp;&amp; !global.respawn;

if(key_slash &amp;&amp; obj_player.energy &gt;= 6){
    audio_play_sound(sword_swing, 10, false);
    slashing = 4;
    if(obj_player.orientation == -1){
        slash_angle = degtorad(point_direction(obj_player.x, obj_player.y, mouse_x, mouse_y));
        if(slash_angle &lt; pi/2 || slash_angle &gt; 3*pi/2){slash_angle = pi}
        slash = instance_create(obj_player.x - obj_player.orientation * slash_radius * cos(slash_angle), obj_player.y - slash_radius * sin(slash_angle), obj_slash);
        slash.image_angle = radtodeg(slash_angle);
    }else{
        slash_angle = degtorad(point_direction(obj_player.x, obj_player.y, mouse_x, mouse_y));
        if(slash_angle &gt; pi/2 &amp;&amp; slash_angle &lt; 3*pi/2){slash_angle = 0}
        slash = instance_create(obj_player.x + obj_player.orientation * slash_radius * cos(slash_angle), obj_player.y - slash_radius * sin(slash_angle), obj_slash);
        slash.image_angle = radtodeg(slash_angle);
    }
    obj_player.energy -= 6;
}else if(slashing &lt;= 0){
    sprite_index = spr_lightsaber;
    image_xscale = 1;
    script_orient_angle();
    if(obj_player.orientation == -1){
        x = obj_player.x + 5;
        y = obj_player.y + 10;
        image_angle += 50;
        image_yscale = -1;
    }else{
        x = obj_player.x - 5;
        y = obj_player.y + 10;
        image_angle -= 50;
        image_yscale = 1;
    }
}else{
    image_yscale = 1;
    if(obj_player.orientation == -1){
        x = obj_player.x + 5;
        y = obj_player.y + 10;
        image_angle = 100;
    }else{
        x = obj_player.x - 5;
        y = obj_player.y + 10;
        image_angle = -100;
    }
}

if(slashing &gt; 0){slashing--}

if(global.respawn){
    visible = false;
}else{
    visible = true;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
